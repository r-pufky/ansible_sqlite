---
###############################################################################
# SSH Security Optimizations
###############################################################################
# Location of sqlite binary.
#
# Default: '/usr/bin/sqlite3'
sqlite_binary: '/usr/bin/sqlite3'

# Enable package installation?
#
# Installs sqlite packages before executing commands. Very slow.
#
# Default: False.
sqlite_install: false

# Absolute path to DB.
#
# sqlite_sql query is executed against this database.
#
# Default: '' (unset).
sqlite_db: ''

# Vacuum the database?
#
# Does not ensure that other process are not currently using the DB. Occurs
# before executing any commands (if specified).
#
# Default: False.
sqlite_vacuum: false

# SQL command to execute.
#
# This command is executed via ansible.builtin.command and is automatically
# escaped using ansible.builtin.quote.
#
# Default: '' (unset).
sqlite_sql: ''

# Use elevated privileges when executing SQL query?
#
# Execute SQL query with elevated privileges of become_user.
#
# Default: False.
#
# Reference:
# * https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_privilege_escalation.html
sqlite_become: false

# Become user?
#
# Execute SQL query with elevated privileges of specified user.
#
# Default: '' (disable).
#
# Reference:
# * https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_privilege_escalation.html
sqlite_become_user: 'root'

# SQL query command failed_when conditional.
#
# Execute SQL query with 'failed_when: sqlite_failed_when'. Failed results will
# halt execution otherwise. In some cases, a failed SQL query is not a critical
# failure.
#
# Default: False (disable).
#
# Reference:
# * https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_error_handling.html#defining-failure
sqlite_failed_when: false